services:
  # NODE.JS APPLICATION
  s_app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: c_node_slcapp
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: ${PORT}
      ORIGIN: ${ORIGIN}
    ports:
      - ${PORT}:${PORT}
    networks:
      - network_0
  # POCKETBASE SQLITE DB
  s_pocketbase:
    build:
      context: .
      dockerfile: Dockerfile.pb
    container_name: c_pocketbase_slcapp
    restart: unless-stopped
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
    ports:
      - ${PB_PORT}:${PB_PORT}
    depends_on:
      - s_app
    networks:
      - network_0

networks:
  network_0:
    driver: bridge
# ############################################ COOLIFY ##########################################
# Name: sveltekitpocketbase.slc.tr
# Description: SLC SvelteKit and Pocketbase for a closed-system full-stack SPA

# Docker Compose Location: /docker-compose-production.yml

# Domains for S App: https://sveltekitpocketbase.slc.tr:5554
# Domains for S Pocketbase: https://sveltekitpocketbasedb.slc.tr:8097

# Custom Build Command:
# docker compose --file ./docker-compose-production.yml --env-file ./.env.production build --pull
#
# Bu komut, docker-compose-production.yml dosyasında tanımlanan ve bir Dockerfile ile oluşturulması gereken servislerin imajlarını inşa eder veya yeniden inşa eder. Eğer kodunuzda veya Dockerfile dosyanızda bir değişiklik yaptıysanız, bu değişikliğin imaja yansıması için build komutunu çalıştırmanız gerekir.
# --pull: Bu bayrak (flag) kritik öneme sahiptir. build işlemi başlamadan önce, Dockerfile dosyanızda belirttiğiniz temel imajın (örneğin FROM node:18 satırındaki node:18 imajı) en güncel versiyonunu her zaman Docker Hub gibi kayıtlı (registry) sunuculardan çekmeye çalışır.
#
# Ne Zaman Kullanılır?
# - Uygulama kodunuzda bir değişiklik yaptığınızda.
# - Dockerfile dosyasında bir değişiklik yaptığınızda (örneğin yeni bir bağımlılık eklediğinizde).
# - Projeyi ilk kez kurarken imajları oluşturmak için.

# Custom Start Command:
# docker compose --file ./docker-compose-production.yml --env-file ./.env.production up -d
#
# OR (build: anahtar kelimesiyle tanımlanmış servislerin imajlarını yeniden oluşturur)
# Custom Start Command: docker compose --file ./docker-compose-production.yml --env-file ./.env.production up -d --build
