/// <reference path="../pb_data/types.d.ts" />
migrate((app) => {
  const collection = app.findCollectionByNameOrId("pbc_1075535434")

  // update collection data
  unmarshal({
    "viewQuery": "-- ----------------------------------------------------------------\n-- Format: 00000999_00_20250912_00000011\n-- -\n-- 1. PART\n-- 00000998 = İŞLEM GÖRMEMİŞ KAYITLAR\n-- 00000999 = İŞLEM GÖRMEMİŞ KAYITLAR\n-- 00001888 = ALINMAYACAK OLARAK İŞARETLENEN KAYITLAR\n-- 00008888 = ALINAN KAYITTAN KALAN KAYITLAR\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 2. PART\n-- 00 = KAYITTA HEM KN HEM KT VAR\n-- 99 = KAYITTA KN VEYA KT YOK\n-- ZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 3. PART\n-- 20250912 = KT VAR\n-- 99999999 = KT YOK\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 4. PART\n-- 00000011 = KN VAR\n-- 00000999 = KN YOK\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- ----------------------------------------------------------------\n-- QUERY WITH CTE\nWITH BaseRecords AS (\n    SELECT\n        t1.id,\n        t1.kn,\n        t1.kt,\n        t1.producer,\n        t1.region,\n        t1.note,\n        t1.kg,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN t1.kn > 0\n                AND t1.kt != '' THEN '0'\n                ELSE '1'\n            END || '_' || CASE\n                WHEN t1.kt = '' THEN '99999999'\n                ELSE strftime('%Y%m%d', t1.kt)\n            END || '_' || CASE\n                WHEN t1.kn = 0 THEN printf('%04d', 9999)\n                ELSE printf('%04d', t1.kn)\n            END\n        ) AS calculated_subtotal_level1,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN t1.kn > 0\n                AND t1.kt != '' THEN '0'\n                ELSE '1'\n            END || '_' || CASE\n                WHEN t1.kt = '' THEN '99999999'\n                ELSE strftime('%Y%m%d', t1.kt)\n            END || '_ZZZZ'\n        ) AS calculated_subtotal_level2,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN kn > 0\n                AND kt != '' THEN '0'\n                ELSE '1'\n            END || '_ZZZZZZZZ_ZZZZ'\n        ) AS calculated_subtotal_level3,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_Z_ZZZZZZZZ_ZZZZ'\n        ) AS calculated_subtotal_level4,\n        ('ZZZZ_Z_ZZZZZZZZ_ZZZZ') AS calculated_subtotal_level5\n    FROM\n        test_subtotal as t1\n)\nSELECT\n    id,\n    subtotal,\n    kn,\n    kt,\n    producer,\n    region,\n    note,\n    kg\nFROM\n    (\n        SELECT\n            -- ALL RECORDS\n            id,\n            calculated_subtotal_level1 AS subtotal,\n            kn,\n            kt,\n            producer,\n            region,\n            note,\n            kg\n        FROM\n            BaseRecords\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 1\n            ('subtotal1_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level1 AS subtotal,\n            MAX(kn) as kn,\n            MAX(kt) as kt,\n            'SUB-1' as producer,\n            'SUB-1' as region,\n            'SUB-1' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level1\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 2\n            ('subtotal2_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level2 AS subtotal,\n            0 as kn,\n            MAX(kt) as kt,\n            'SUB-2' as producer,\n            'SUB-2' as region,\n            'SUB-2' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level2\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 3\n            ('subtotal3_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level3 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-3' as producer,\n            'SUB-3' as region,\n            'SUB-3' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level3\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 4\n            ('subtotal4_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level4 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-4' as producer,\n            'SUB-4' as region,\n            'SUB-4' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level4\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 5\n            ('subtotal5_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level5 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-5' as producer,\n            'SUB-5' as region,\n            'SUB-5' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level5\n    )\nORDER BY\n    subtotal,\n    producer;"
  }, collection)

  return app.save(collection)
}, (app) => {
  const collection = app.findCollectionByNameOrId("pbc_1075535434")

  // update collection data
  unmarshal({
    "viewQuery": "-- ----------------------------------------------------------------\n-- Format: 00000999_00_20250912_00000011\n-- -\n-- 1. PART\n-- 00000998 = İŞLEM GÖRMEMİŞ KAYITLAR\n-- 00000999 = İŞLEM GÖRMEMİŞ KAYITLAR\n-- 00001888 = ALINMAYACAK OLARAK İŞARETLENEN KAYITLAR\n-- 00008888 = ALINAN KAYITTAN KALAN KAYITLAR\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 2. PART\n-- 00 = KAYITTA HEM KN HEM KT VAR\n-- 99 = KAYITTA KN VEYA KT YOK\n-- ZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 3. PART\n-- 20250912 = KT VAR\n-- 99999999 = KT YOK\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- -\n-- 4. PART\n-- 00000011 = KN VAR\n-- 00000999 = KN YOK\n-- ZZZZZZZZ = EN ALT TOPLAM KIRILIMI\n-- ----------------------------------------------------------------\n-- QUERY WITH CTE\nWITH BaseRecords AS (\n    SELECT\n        t1.id,\n        t1.kn,\n        t1.kt,\n        t1.producer,\n        t1.region,\n        t1.note,\n        t1.kg,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN t1.kn > 0\n                AND t1.kt != '' THEN '00'\n                ELSE '99'\n            END || '_' || CASE\n                WHEN t1.kt = '' THEN '99999999'\n                ELSE strftime('%Y%m%d', t1.kt)\n            END || '_' || CASE\n                WHEN t1.kn = 0 THEN printf('%04d', 9999)\n                ELSE printf('%04d', t1.kn)\n            END\n        ) AS calculated_subtotal_level1,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN t1.kn > 0\n                AND t1.kt != '' THEN '00'\n                ELSE '99'\n            END || '_' || CASE\n                WHEN t1.kt = '' THEN '99999999'\n                ELSE strftime('%Y%m%d', t1.kt)\n            END || '_ZZZZ'\n        ) AS calculated_subtotal_level2,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_' || CASE\n                WHEN kn > 0\n                AND kt != '' THEN '00'\n                ELSE '99'\n            END || '_ZZZZZZZZ_ZZZZ'\n        ) AS calculated_subtotal_level3,\n        (\n            CASE\n                WHEN t1.kn = 1888\n                OR t1.kn = 8888 THEN printf('%04d', t1.kn)\n                ELSE printf('%04d', 0)\n            END || '_ZZ_ZZZZZZZZ_ZZZZ'\n        ) AS calculated_subtotal_level4,\n        ('ZZZZ_ZZ_ZZZZZZZZ_ZZZZ') AS calculated_subtotal_level5\n    FROM\n        test_subtotal as t1\n)\nSELECT\n    id,\n    subtotal,\n    kn,\n    kt,\n    producer,\n    region,\n    note,\n    kg\nFROM\n    (\n        SELECT\n            -- ALL RECORDS\n            id,\n            calculated_subtotal_level1 AS subtotal,\n            kn,\n            kt,\n            producer,\n            region,\n            note,\n            kg\n        FROM\n            BaseRecords\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 1\n            ('subtotal1_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level1 AS subtotal,\n            MAX(kn) as kn,\n            MAX(kt) as kt,\n            'SUB-1' as producer,\n            'SUB-1' as region,\n            'SUB-1' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level1\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 2\n            ('subtotal2_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level2 AS subtotal,\n            0 as kn,\n            MAX(kt) as kt,\n            'SUB-2' as producer,\n            'SUB-2' as region,\n            'SUB-2' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level2\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 3\n            ('subtotal3_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level3 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-3' as producer,\n            'SUB-3' as region,\n            'SUB-3' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level3\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 4\n            ('subtotal4_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level4 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-4' as producer,\n            'SUB-4' as region,\n            'SUB-4' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level4\n        UNION\n        ALL\n        SELECT\n            -- SUB TOTAL 5\n            ('subtotal5_' || (ROW_NUMBER() OVER())) AS id,\n            calculated_subtotal_level5 AS subtotal,\n            0 as kn,\n            '' as kt,\n            'SUB-5' as producer,\n            'SUB-5' as region,\n            'SUB-5' as note,\n            SUM(kg) AS kg\n        FROM\n            BaseRecords\n        GROUP BY\n            calculated_subtotal_level5\n    )\nORDER BY\n    subtotal,\n    producer;"
  }, collection)

  return app.save(collection)
})
